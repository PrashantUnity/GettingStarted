@page "/ImageFilter"

<PageTitle>Image Filter</PageTitle>

<MudPaper Class="ma-6 pa-3">
    <InputFile OnChange="LoadImage" />

    @if (ImageUri != "")
    {
        <MudImage Src="@ImageUri" Width="400"
                  Height="400"
                  Alt="Image" Elevation="25"
                  Class="rounded-lg ma-4"
                  Style="@($"filter:  blur({blur}px) brightness({brightness}%) contrast({contrast}%) grayscale({grayscale}%) hue-rotate({huerotate}deg) invert({invert}%) opacity({opacity}%) saturate({saturate}%) sepia({sepia}%);")" />
    }
    else
    {
        <MudImage Src="https://picsum.photos/400"
                  Width="400"
                  Height="400"
                  Alt="Image" Elevation="25"
                  Class="rounded-lg ma-4"
                  Style="@($"filter:  blur({blur}px) brightness({brightness}%) contrast({contrast}%) grayscale({grayscale}%) hue-rotate({huerotate}deg) invert({invert}%) opacity({opacity}%) saturate({saturate}%) sepia({sepia}%);")" />
    }



    <MudSlider @bind-Value="@blur" Min="0" Max="50">blur</MudSlider>
    <MudSlider @bind-Value="@brightness" Min="0" Max="300">brightness</MudSlider>
    <MudSlider @bind-Value="@contrast" Min="0" Max="300">contrast</MudSlider>
    <MudSlider @bind-Value="@grayscale" Min="0" Max="100">grayscale</MudSlider>
    <MudSlider @bind-Value="@huerotate" Min="0" Max="360">huerotate</MudSlider>
    <MudSlider @bind-Value="@invert" Min="0" Max="100">invert</MudSlider>
    <MudSlider @bind-Value="@opacity" Min="0" Max="100">opacity</MudSlider>
    <MudSlider @bind-Value="@saturate" Min="0" Max="300">saturate</MudSlider>
    <MudSlider @bind-Value="@sepia" Min="0" Max="100">sepia</MudSlider>



    <MudPaper class="pa-6">
        <MudText Typo="Typo.subtitle2">
            .CssImageFilter {

            @($"filter:  blur({blur}px) brightness({brightness}%) contrast({contrast}%) grayscale({grayscale}%) hue-rotate({huerotate}deg) invert({invert}%) opacity({opacity}%) saturate({saturate}%) sepia({sepia}%);")
            }
        </MudText>
    </MudPaper>
</MudPaper>
@code {
    double brightness = 100;
    double contrast = 100;
    double huerotate = 0;
    double invert = 0;
    double opacity = 100;
    double saturate = 100;
    double sepia = 0;
    double grayscale = 0;
    double blur = 0;


    IList<IBrowserFile> files = new List<IBrowserFile>();

    string ImageUri = "";
    public async Task LoadImage(InputFileChangeEventArgs inputFileChangeEventArgs)
    {
        var image = await inputFileChangeEventArgs.File.RequestImageFileAsync("image/png", 600, 600);

        using Stream imageStream = image.OpenReadStream(1024 * 1024 * 10);

        using MemoryStream ms = new();
        //copy imageStream to Memory stream
        await imageStream.CopyToAsync(ms);

        //convert stream to base64
        ImageUri = $"data:image/png;base64,{Convert.ToBase64String(ms.ToArray())}";
        StateHasChanged();

    }
}

