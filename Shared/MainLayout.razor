@inherits LayoutComponentBase

<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_theme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="0">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudSpacer /> 
        <MudPaper Elevation="0" Class="mx-6">
            <div class="InputContainer">
                <input type="text" name="text" @bind-value="_normalText" class="input" id="input" placeholder="Search">

                <label for="input" class="labelforsearch">

                </label>

                <button class="micButton" @onclick="SearchMe">
                    <svg viewBox="0 0 512 512" class="searchIcon"><path d="M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z"></path></svg>
                </button>
            </div>
        </MudPaper>
         
        <MudToggleIconButton @bind-Toggled="@_isDarkMode"
                             Icon="@Icons.Material.Filled.BrightnessHigh" Color="Color.Dark" Title="Dark Mode"
                             ToggledIcon="@Icons.Material.Filled.WbSunny" ToggledColor="Color.Warning" ToggledTitle="Light Mode" />
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" Elevation="1">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">Chaos World</MudText>
        </MudDrawerHeader>
        <NavMenu />
    </MudDrawer>
    <MudMainContent> 
            @Body 
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = true;
    private MudTheme _theme = new();
    private bool _isDarkMode=true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
}
@code {

    string _normalText = string.Empty;

    List<string> result = new List<string>();

    private bool visible;
    private int rating;
    private void OpenDialog() => visible = true;
    void Submit() => visible = false;

    private DialogOptions dialogOptions = new() { FullWidth = true };


    void SearchMe()
    {
        OpenDialog();
    }
}


<MudDialog @bind-IsVisible="visible"
           Options="dialogOptions"
           Class="py-6"
           Style="@($"background{Colors.Blue.Lighten3};")">
    <DialogContent>
        <SearchPopup Search="@_normalText" />
    </DialogContent>
</MudDialog>

<style>
    .InputContainer {
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: rgb(255, 255, 255);
        border-radius: 10px;
        overflow: hidden;
        cursor: pointer;
        padding-left: 15px;
        box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.075);
    }

    .input {
        width: 100%;
        height: 100%;
        border: none;
        outline: none;
        font-size: 0.9em;
        caret-color: rgb(255, 81, 0);
    }


    .searchIcon {
        width: 12px;
    }

    .micIcon {
        width: 12px;
    }

    .micButton {
        padding: 0px 15px 0px 12px;
        border: none;
        background-color: transparent;
        height: 40px;
        cursor: pointer;
        transition-duration: .3s;
    }

    .searchIcon path {
        fill: rgb(114, 114, 114);
    }

    .micIcon path {
        fill: rgb(255, 81, 0);
    }

    .micButton:hover {
        background-color: rgb(255, 230, 230);
        transition-duration: .3s;
    }
</style>
