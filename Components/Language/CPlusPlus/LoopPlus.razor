@inject IJSRuntime JSRuntime
<pre class="line-numbers">
<code class="language-cilkcpp">#include &lt;iostream>
#include &lt;vector>

int main() {
    // for loop
    for (int i = 0; i &lt; 5; i++) {
        std::cout &lt;&lt; i &lt;&lt; std::endl;
    }

    // while loop
    int count = 0;
    while (count &lt; 5) {
        std::cout &lt;&lt; count &lt;&lt; std::endl;
        count++;
    }

    // do-while loop
    int value = 0;
    do {
        std::cout &lt;&lt; value &lt;&lt; std::endl;
        value++;
    } while (value &lt; 5);

    // foreach loop equivalent using range-based for loop
    int numbers[] = { 1, 2, 3, 4, 5 };
    for (int number : numbers) {
        std::cout &lt;&lt; number &lt;&lt; std::endl;
    }

    return 0;
}
</code>
</pre>


@code {
    // Inside a .razor file or a separate class
    @inject IJSRuntime JSRuntime


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("initializePrism");
        }
    }

}
